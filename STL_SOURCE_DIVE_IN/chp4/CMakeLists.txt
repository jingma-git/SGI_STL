cmake_minimum_required(VERSION 3.1)
project(chp4)

include_directories(./include/)
# add_executable(main my_vector.cpp)
# add_executable(main 1temp_bool.cpp)
# add_executable(main 2temp_arg_deduct.cpp)
# add_executable(main 3param_pack.cpp)
# add_executable(main 4new_delete.cpp)
# add_executable(main 5uninitialized_fill_type_traits.cpp)

# add_executable(main my_union.cpp)

# add_executable(main my_copy.cpp)
# add_executable(main std_copy.cpp)
# add_executable(main std_copy_backward.cpp)
# add_executable(main my_macros.cpp)
# add_executable(main my_memory.cpp)
# add_executable(main std_memory.cpp)

# add_executable(main my_vector.cpp)
# add_executable(main std_vector.cpp)
# add_executable(main my_list.cpp)
# add_executable(main std_list.cpp)
# add_executable(main my_deque.cpp)
# add_executable(main std_deque.cpp)
# add_executable(main my_stack.cpp)
# add_executable(main std_stack.cpp)
# add_executable(main my_queue.cpp)
# add_executable(main std_queue.cpp)
# add_executable(main my_queue.cpp)
# add_executable(main my_heap.cpp)
# add_executable(main std_heap.cpp)
# add_executable(main my_heap.cpp)
add_executable(main my_priority_queue.cpp)
# add_executable(main std_priority_queue.cpp)



target_link_libraries(main -fsanitize=address)